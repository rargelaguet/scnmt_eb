tmp <- "E7.5Mes_vs_E7.5EctEnd"
enhancers <- "Mes enhancers"
opts$met.annos <- c(
"H3K27ac_distal_E7.5_Mes_intersect12_500" = "Mes enhancers",
"prom_2000_2000" = "Promoters"
)
opts$acc.annos <- c(
"H3K27ac_distal_E7.5_Mes_intersect12" = "Mes enhancers",
"prom_2000_2000" = "Promoters"
)
color <- "violetred"
# Ectoderm
} else if (opts$lineage=="Ectoderm") {
tmp <- "E7.5Ect_vs_E7.5MesEnd"
enhancers <- "Ect enhancers"
opts$met.annos <- c(
"H3K27ac_distal_E7.5_Ect_intersect12_500" = "Ect enhancers",
"prom_2000_2000" = "Promoters"
)
opts$acc.annos <- c(
"H3K27ac_distal_E7.5_Ect_intersect12" = "Ect enhancers",
"prom_2000_2000" = "Promoters"
)
color <- "steelblue"
# Endoderm
} else if (opts$lineage=="Endoderm") {
tmp <- "E7.5End_vs_E7.5EctMes"
enhancers <- "End enhancers"
opts$met.annos <- c(
"H3K27ac_distal_E7.5_End_intersect12_500" = "End enhancers",
"prom_2000_2000" = "Promoters"
)
opts$acc.annos <- c(
"H3K27ac_distal_E7.5_End_intersect12" = "End enhancers",
"prom_2000_2000" = "Promoters"
)
color <- "#43CD80"
} else {
stop("Lineage wrongly specified")
}
# Load differential RNA expression results
diff.rna <- fread(sprintf("zcat < %s/%s.txt.gz",io$diff.rna,tmp)) %>%
setnames(c("id","logFC","sig","padj_fdr","log_padj_fdr","symbol"),c("ens_id","rna_diff","rna_sig","rna_padj_fdr","rna_log_padj_fdr","gene")) %>%
.[,c("ens_id","gene","rna_diff","rna_padj_fdr","rna_log_padj_fdr","rna_sig")] %>%
.[,rna_sig:=rna_diff<(-2) & rna_padj_fdr<0.01] %>%
.[,rna_sig:=ifelse(is.na(rna_sig),FALSE,rna_sig)]
# Load differential methylation results
diff.met <- lapply(names(opts$met.annos), function(x)
fread(sprintf("zcat < %s/%s_%s.txt.gz",io$diff.met,tmp,x))) %>% rbindlist %>%
.[,c("id","anno","diff","padj_fdr","sig")] %>%
.[,sig:=padj_fdr<opts$threshold.fdr]
# Load differential accessibility results
diff.acc <- lapply(names(opts$acc.annos), function(x)
fread(sprintf("zcat < %s/%s_%s.txt.gz",io$diff.acc,tmp,x))) %>% rbindlist %>%
.[,c("id","anno","diff","padj_fdr","sig")] %>%
.[,sig:=padj_fdr<opts$threshold.fdr]
annos <- unique(c(names(opts$met.annos),names(opts$acc.annos)))
feature_metadata <- lapply(annos, function(anno)
fread(sprintf("%s/%s.bed",io$annos_dir,anno), stringsAsFactors=T)[,c(1,2,3,4,5,6)]) %>%
rbindlist %>% setnames(c("chr", "start", "end", "strand", "id", "anno"))
# Load gene metadata
gene_metadata <- fread(io$gene_metadata,stringsAsFactors=T) %>%
setnames(c("ens_id","symbol"),c("id","gene")) %>%
.[,chr:=convert_chr_format(chr,to="short")]
feature_metadata_filt <- feature_metadata %>% split(.$anno) %>%
map2(.,names(.), function(x,y) x[id %in% c(diff.met[anno==y,id],diff.acc[anno==y,id])] ) %>%
rbindlist
gene_metadata_filt <- gene_metadata %>% .[,c("chr","start","end","gene")] %>%
# .[,c("start", "end") := list(start-opts$gene_window, end+opts$gene_window)] %>%
setkey(chr,start,end)
met_list <- list()
for (ann in unique(diff.met$anno)){
# Subset corresponding anno
met_tmp <- diff.met[anno == ann, ]
# Non gene-associated feature
if (all(grepl("ENSMUSG", unique(met_tmp$id)) == FALSE)) {
# Extract coordiantes for methylation sites and for genes
feature_metadata_tmp <- feature_metadata_filt[anno==ann, c("chr","start","end","id")] %>%
.[,c("start.window","end.window") := list(start - opts$gene_window, end + opts$gene_window)] %>%
setkey(chr,start.window,end.window)
# Do the overlap
ov1 <- foverlaps(gene_metadata_filt, feature_metadata_filt[anno==ann, c("chr","start","end","id")] %>% setkey(chr,start,end), nomatch=0) %>%
.[,c("gene","id")]
ov2 <- foverlaps(gene_metadata_filt, feature_metadata_tmp, nomatch=0) %>%
.[,.(start_dist=abs(end-i.start), end_dist=abs(start-i.end)),by=c("gene","id")] %>%
.[,dist:=ifelse(start_dist<end_dist,start_dist,end_dist)] %>%
# .[.[,.I[dist==min(dist)], by="id"]$V1] %>%
.[dist<=opts$gene_window] %>%
.[,c("gene","id")]
ov <- rbind(ov1,ov2) %>% unique(.)
# Merge with methylation data
met_list[[ann]] <- merge(met_tmp, ov, by="id", allow.cartesian=T)
}
# Gene-associated feature
else if (all(grepl("ENSMUSG", unique(met_tmp$id)) == TRUE)) {
met_list[[ann]] <- merge(met_tmp, gene_metadata[,c("id","gene")], by="id")
}
}
diff.met <- rbindlist(met_list) %>%
.[,sig:=(padj_fdr<0.1 & abs(diff)>0.10)]
acc_list <- list()
for (ann in unique(diff.acc$anno)){
# Subset corresponding anno
acc_tmp <- diff.acc[anno == ann, ]
# Non gene-associated feature
if (all(grepl("ENSMUSG", unique(acc_tmp$id)) == FALSE)) {
# Extract coordiantes for methylation sites and for genes
feature_metadata_tmp <- feature_metadata_filt[anno==ann, c("chr","start","end","id")] %>%
.[,c("start.window","end.window") := list(start - opts$gene_window, end + opts$gene_window)] %>%
setkey(chr,start.window,end.window)
# Do the overlap
ov1 <- foverlaps(gene_metadata_filt, feature_metadata_filt[anno==ann, c("chr","start","end","id")] %>% setkey(chr,start,end), nomatch=0) %>%
.[,c("gene","id")]
ov2 <- foverlaps(gene_metadata_filt, feature_metadata_tmp, nomatch=0) %>%
.[,.(start_dist=abs(end-i.start), end_dist=abs(start-i.end)),by=c("gene","id")] %>%
.[,dist:=ifelse(start_dist<end_dist,start_dist,end_dist)] %>%
# .[.[,.I[dist==min(dist)], by="id"]$V1] %>%
.[dist<=opts$gene_window] %>%
.[,c("gene","id")]
ov <- rbind(ov1,ov2) %>% unique(.)
# Merge with methylation data
acc_list[[ann]] <- merge(acc_tmp, ov, by="id", allow.cartesian=T)
}
# Gene-associated feature
else if (all(grepl("ENSMUSG", unique(acc_tmp$id)) == TRUE)) {
acc_list[[ann]] <- merge(acc_tmp, gene_metadata[,c("id","gene")], by="id")
}
}
diff.acc <- rbindlist(acc_list) %>%
.[,sig:=(padj_fdr<0.1 & abs(diff)>0.10)]
diff.met %>% .[,anno:=stringr::str_replace_all(anno,opts$met.annos)]
diff.acc %>% .[,anno:=stringr::str_replace_all(anno,opts$acc.annos)]
diff.acc <- diff.acc %>% split(.$anno) %>% map(~ .[,.SD[which.min(padj_fdr)], by=c("gene")]) %>% rbindlist
diff.met <- diff.met %>% split(.$anno) %>% map(~ .[,.SD[which.min(padj_fdr)], by=c("gene")]) %>% rbindlist
diff.metacc <- rbind(
diff.met[,type:="met"],
diff.acc[,type:="acc"]
) %>% dcast(gene+anno~type, value.var=c("padj_fdr","diff","sig")) %>% .[complete.cases(.)]
diff.metaccrna <- diff.metacc %>% merge(diff.rna[,c("gene","rna_diff","rna_sig")], by="gene")
# diff.metaccrna.filt <- diff.metaccrna[rna_sig==T]
diff.metaccrna.filt <- diff.metaccrna
foo <- diff.metaccrna.filt %>% copy %>% .[,sig:=as.factor((rna_sig) & (sig_met|sig_acc))] %>%
.[,c("diff_met","diff_acc"):=list(-diff_met*100,-diff_acc*100)]
opts$ymin <- -25
opts$ymax <- 45
opts$xmin <- -55
opts$xmax <- 30
foo_filt <- foo[anno=="Promoters"]
p <- ggplot(foo_filt, aes(x=diff_met, y=diff_acc)) +
geom_segment(aes(x=opts$xmin, xend=opts$xmax, y=0, yend=0), size=0.25, color="orange") +
geom_segment(aes(x=0, xend=0, y=opts$ymin, yend=opts$ymax), size=0.25, color="orange") +
# geom_point(size=1.75, data=foo_filt[sig==T]) +
# geom_point(size=0.5, data=foo_filt[sig==F], alpha=0.1) +
ggrastr::geom_point_rast(size=1.75, data=foo_filt[sig==T]) +
ggrastr::geom_point_rast(size=0.5, data=foo_filt[sig==F], alpha=0.1) +
ggrepel::geom_text_repel(data=foo_filt[sig==T], aes(x=diff_met, y=diff_acc, label=gene), size=5, color=color) +
coord_cartesian(xlim=c(opts$xmin,opts$xmax), ylim=c(opts$ymin,opts$ymax)) +
labs(x="Differential methylation rate", y="Differential accessibility rate") +
theme(
axis.text.x = element_text(size=rel(1.1), color='black'),
axis.text.y = element_text(size=rel(1.1), color='black'),
axis.title.x = element_text(size=rel(1.2), color='black'),
axis.title.y = element_text(size=rel(1.2), color='black'),
legend.position = "none",
panel.background = element_blank()
)
print(p)
pdf(sprintf("%s/diffmetaccrna_%s_promoters.pdf",io$outdir,opts$lineage), width=5, height=4, useDingbats = F)
print(p)
dev.off()
suppressPackageStartupMessages(library(scater))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(purrr))
suppressPackageStartupMessages(library(ggplot2))
convert_chr_format <- function(chr, to) {
# Function to convert the chr from short to long format and viceversa
# to: "short" or "long"
chr <- as.character(chr)
stopifnot(to %in% c("short","long"))
short_alphabet <- c(1:19,"X","Y","MT")
long_alphabet <- paste("chr",short_alphabet,sep="")
if (to == "short") {
if (all(chr %in% short_alphabet)) {
return(chr)
} else {
stopifnot(all(chr %in% long_alphabet))
names(short_alphabet) <- long_alphabet
return(unname(short_alphabet[chr]))
}
}
if (to == "long") {
if (all(chr %in% long_alphabet)) {
return(chr)
} else {
stopifnot(all(chr %in% short_alphabet))
names(long_alphabet) <- short_alphabet
return(unname(long_alphabet[chr]))
}
}
}
## Define I/O ##
io <- list()
io$basedir <- "/Users/ricard/data/gastrulation"
io$sample_metadata <- paste0(io$basedir,"/sample_metadata_scNMT.txt")
io$gene_metadata <- "/Users/ricard/data/ensembl/mouse/v87/BioMart/mRNA/Mmusculus_genes_BioMart.87.txt"
io$annos_dir <- "/Users/ricard/data/gastrulation/features/filt"
io$outdir <- "/Users/ricard/gastrulation/metaccrna/differential/out"
io$diff.rna <- "/Users/ricard/data/gastrulation_norsync_stuff/rna/test"
io$diff.met <- "/Users/ricard/data/gastrulation_norsync_stuff/met/test/diff_featurelevel"
io$diff.acc <- "/Users/ricard/data/gastrulation_norsync_stuff/acc/test/diff_featurelevel"
## Define options ##
opts <- list()
# window length for the overlap between genes and features
opts$gene_window <- 50000
# FDR threshold
opts$threshold.fdr <- 0.10
# Define which lineage to look at
opts$lineage <- "Mesoderm"
# Mesoderm
if (opts$lineage=="Mesoderm") {
tmp <- "E7.5Mes_vs_E7.5EctEnd"
enhancers <- "Mes enhancers"
opts$met.annos <- c(
"H3K27ac_distal_E7.5_Mes_intersect12_500" = "Mes enhancers",
"prom_2000_2000" = "Promoters"
)
opts$acc.annos <- c(
"H3K27ac_distal_E7.5_Mes_intersect12" = "Mes enhancers",
"prom_2000_2000" = "Promoters"
)
color <- "violetred"
# Ectoderm
} else if (opts$lineage=="Ectoderm") {
tmp <- "E7.5Ect_vs_E7.5MesEnd"
enhancers <- "Ect enhancers"
opts$met.annos <- c(
"H3K27ac_distal_E7.5_Ect_intersect12_500" = "Ect enhancers",
"prom_2000_2000" = "Promoters"
)
opts$acc.annos <- c(
"H3K27ac_distal_E7.5_Ect_intersect12" = "Ect enhancers",
"prom_2000_2000" = "Promoters"
)
color <- "steelblue"
# Endoderm
} else if (opts$lineage=="Endoderm") {
tmp <- "E7.5End_vs_E7.5EctMes"
enhancers <- "End enhancers"
opts$met.annos <- c(
"H3K27ac_distal_E7.5_End_intersect12_500" = "End enhancers",
"prom_2000_2000" = "Promoters"
)
opts$acc.annos <- c(
"H3K27ac_distal_E7.5_End_intersect12" = "End enhancers",
"prom_2000_2000" = "Promoters"
)
color <- "#43CD80"
} else {
stop("Lineage wrongly specified")
}
# Load differential RNA expression results
diff.rna <- fread(sprintf("zcat < %s/%s.txt.gz",io$diff.rna,tmp)) %>%
setnames(c("id","logFC","sig","padj_fdr","log_padj_fdr","symbol"),c("ens_id","rna_diff","rna_sig","rna_padj_fdr","rna_log_padj_fdr","gene")) %>%
.[,c("ens_id","gene","rna_diff","rna_padj_fdr","rna_log_padj_fdr","rna_sig")] %>%
.[,rna_sig:=rna_diff<(-2) & rna_padj_fdr<0.01] %>%
.[,rna_sig:=ifelse(is.na(rna_sig),FALSE,rna_sig)]
# Load differential methylation results
diff.met <- lapply(names(opts$met.annos), function(x)
fread(sprintf("zcat < %s/%s_%s.txt.gz",io$diff.met,tmp,x))) %>% rbindlist %>%
.[,c("id","anno","diff","padj_fdr","sig")] %>%
.[,sig:=padj_fdr<opts$threshold.fdr]
# Load differential accessibility results
diff.acc <- lapply(names(opts$acc.annos), function(x)
fread(sprintf("zcat < %s/%s_%s.txt.gz",io$diff.acc,tmp,x))) %>% rbindlist %>%
.[,c("id","anno","diff","padj_fdr","sig")] %>%
.[,sig:=padj_fdr<opts$threshold.fdr]
annos <- unique(c(names(opts$met.annos),names(opts$acc.annos)))
feature_metadata <- lapply(annos, function(anno)
fread(sprintf("%s/%s.bed",io$annos_dir,anno), stringsAsFactors=T)[,c(1,2,3,4,5,6)]) %>%
rbindlist %>% setnames(c("chr", "start", "end", "strand", "id", "anno"))
# Load gene metadata
gene_metadata <- fread(io$gene_metadata,stringsAsFactors=T) %>%
setnames(c("ens_id","symbol"),c("id","gene")) %>%
.[,chr:=convert_chr_format(chr,to="short")]
feature_metadata_filt <- feature_metadata %>% split(.$anno) %>%
map2(.,names(.), function(x,y) x[id %in% c(diff.met[anno==y,id],diff.acc[anno==y,id])] ) %>%
rbindlist
gene_metadata_filt <- gene_metadata %>% .[,c("chr","start","end","gene")] %>%
# .[,c("start", "end") := list(start-opts$gene_window, end+opts$gene_window)] %>%
setkey(chr,start,end)
met_list <- list()
for (ann in unique(diff.met$anno)){
# Subset corresponding anno
met_tmp <- diff.met[anno == ann, ]
# Non gene-associated feature
if (all(grepl("ENSMUSG", unique(met_tmp$id)) == FALSE)) {
# Extract coordiantes for methylation sites and for genes
feature_metadata_tmp <- feature_metadata_filt[anno==ann, c("chr","start","end","id")] %>%
.[,c("start.window","end.window") := list(start - opts$gene_window, end + opts$gene_window)] %>%
setkey(chr,start.window,end.window)
# Do the overlap
ov1 <- foverlaps(gene_metadata_filt, feature_metadata_filt[anno==ann, c("chr","start","end","id")] %>% setkey(chr,start,end), nomatch=0) %>%
.[,c("gene","id")]
ov2 <- foverlaps(gene_metadata_filt, feature_metadata_tmp, nomatch=0) %>%
.[,.(start_dist=abs(end-i.start), end_dist=abs(start-i.end)),by=c("gene","id")] %>%
.[,dist:=ifelse(start_dist<end_dist,start_dist,end_dist)] %>%
# .[.[,.I[dist==min(dist)], by="id"]$V1] %>%
.[dist<=opts$gene_window] %>%
.[,c("gene","id")]
ov <- rbind(ov1,ov2) %>% unique(.)
# Merge with methylation data
met_list[[ann]] <- merge(met_tmp, ov, by="id", allow.cartesian=T)
}
# Gene-associated feature
else if (all(grepl("ENSMUSG", unique(met_tmp$id)) == TRUE)) {
met_list[[ann]] <- merge(met_tmp, gene_metadata[,c("id","gene")], by="id")
}
}
diff.met <- rbindlist(met_list) %>%
.[,sig:=(padj_fdr<0.1 & abs(diff)>0.10)]
acc_list <- list()
for (ann in unique(diff.acc$anno)){
# Subset corresponding anno
acc_tmp <- diff.acc[anno == ann, ]
# Non gene-associated feature
if (all(grepl("ENSMUSG", unique(acc_tmp$id)) == FALSE)) {
# Extract coordiantes for methylation sites and for genes
feature_metadata_tmp <- feature_metadata_filt[anno==ann, c("chr","start","end","id")] %>%
.[,c("start.window","end.window") := list(start - opts$gene_window, end + opts$gene_window)] %>%
setkey(chr,start.window,end.window)
# Do the overlap
ov1 <- foverlaps(gene_metadata_filt, feature_metadata_filt[anno==ann, c("chr","start","end","id")] %>% setkey(chr,start,end), nomatch=0) %>%
.[,c("gene","id")]
ov2 <- foverlaps(gene_metadata_filt, feature_metadata_tmp, nomatch=0) %>%
.[,.(start_dist=abs(end-i.start), end_dist=abs(start-i.end)),by=c("gene","id")] %>%
.[,dist:=ifelse(start_dist<end_dist,start_dist,end_dist)] %>%
# .[.[,.I[dist==min(dist)], by="id"]$V1] %>%
.[dist<=opts$gene_window] %>%
.[,c("gene","id")]
ov <- rbind(ov1,ov2) %>% unique(.)
# Merge with methylation data
acc_list[[ann]] <- merge(acc_tmp, ov, by="id", allow.cartesian=T)
}
# Gene-associated feature
else if (all(grepl("ENSMUSG", unique(acc_tmp$id)) == TRUE)) {
acc_list[[ann]] <- merge(acc_tmp, gene_metadata[,c("id","gene")], by="id")
}
}
diff.acc <- rbindlist(acc_list) %>%
.[,sig:=(padj_fdr<0.1 & abs(diff)>0.10)]
diff.met %>% .[,anno:=stringr::str_replace_all(anno,opts$met.annos)]
diff.acc %>% .[,anno:=stringr::str_replace_all(anno,opts$acc.annos)]
diff.acc <- diff.acc %>% split(.$anno) %>% map(~ .[,.SD[which.min(padj_fdr)], by=c("gene")]) %>% rbindlist
diff.met <- diff.met %>% split(.$anno) %>% map(~ .[,.SD[which.min(padj_fdr)], by=c("gene")]) %>% rbindlist
diff.metacc <- rbind(
diff.met[,type:="met"],
diff.acc[,type:="acc"]
) %>% dcast(gene+anno~type, value.var=c("padj_fdr","diff","sig")) %>% .[complete.cases(.)]
diff.metaccrna <- diff.metacc %>% merge(diff.rna[,c("gene","rna_diff","rna_sig")], by="gene")
# diff.metaccrna.filt <- diff.metaccrna[rna_sig==T]
diff.metaccrna.filt <- diff.metaccrna
foo <- diff.metaccrna.filt %>% copy %>% .[,sig:=as.factor((rna_sig) & (sig_met|sig_acc))] %>%
.[,c("diff_met","diff_acc"):=list(-diff_met*100,-diff_acc*100)]
opts$ymin <- -25
opts$ymax <- 45
opts$xmin <- -55
opts$xmax <- 30
foo_filt <- foo[anno=="Promoters"]
p <- ggplot(foo_filt, aes(x=diff_met, y=diff_acc)) +
geom_segment(aes(x=opts$xmin, xend=opts$xmax, y=0, yend=0), size=0.25, color="orange") +
geom_segment(aes(x=0, xend=0, y=opts$ymin, yend=opts$ymax), size=0.25, color="orange") +
# geom_point(size=1.75, data=foo_filt[sig==T]) +
# geom_point(size=0.5, data=foo_filt[sig==F], alpha=0.1) +
ggrastr::geom_point_rast(size=1.75, data=foo_filt[sig==T]) +
ggrastr::geom_point_rast(size=0.5, data=foo_filt[sig==F], alpha=0.1) +
ggrepel::geom_text_repel(data=foo_filt[sig==T], aes(x=diff_met, y=diff_acc, label=gene), size=5, color=color) +
coord_cartesian(xlim=c(opts$xmin,opts$xmax), ylim=c(opts$ymin,opts$ymax)) +
labs(x="Differential methylation rate", y="Differential accessibility rate") +
theme(
axis.text.x = element_text(size=rel(1.1), color='black'),
axis.text.y = element_text(size=rel(1.1), color='black'),
axis.title.x = element_text(size=rel(1.2), color='black'),
axis.title.y = element_text(size=rel(1.2), color='black'),
legend.position = "none",
panel.background = element_blank()
)
print(p)
pdf(sprintf("%s/diffmetaccrna_%s_promoters.pdf",io$outdir,opts$lineage), width=5, height=4, useDingbats = F)
print(p)
dev.off()
library(scater)
library(data.table)
library(purrr)
library(ggplot2)
source("/Users/ricard/gastrulation/rna/differential/utils.R")
MinMeanSEMMax <- function(x) {
v <- c(mean(x) - sd(x)/sqrt(length(x)), mean(x) - sd(x)/sqrt(length(x)), mean(x), mean(x) + sd(x)/sqrt(length(x)), mean(x) + sd(x)/sqrt(length(x)))
names(v) <- c("ymin", "lower", "middle", "upper", "ymax")
v
}
boxplot_theme <- function() {
p <- theme(
plot.title = element_text(size=30, hjust=0.5, margin=margin(0,0,20,0)),
axis.title.y = element_text(colour="black", size=20, vjust=1.5),
axis.title.x = element_text(colour="black", size=20, vjust=1.5, margin=margin(15,0,0,0)),
axis.text.x = element_text(colour="black",size=rel(1.6)),
axis.text.y = element_text(colour="black",size=rel(1.6)),
axis.line = element_line(colour="black", size=rel(0.7)),
axis.ticks.x = element_line(colour="black", size=rel(0.8)),
axis.ticks.y = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="none",
legend.text=element_text(size=15),
legend.title=element_blank(),
legend.background=element_blank(),
panel.border = element_blank()
)
}
io <- list()
io$basedir <- "/Users/ricard/data/gastrulation"
io$sample_metadata <- paste0(io$basedir,"/sample_metadata_scNMT.txt")
io$rna.infile <- paste(io$basedir,"rna/parsed/sceset_scNMT.rds",sep="/")
io$outdir <- "/Users/ricard/gastrulation/rna/plot_example/out"
## Define options
opts <- list()
opts$stage_lineage <- c(
"E4.5_EPI","E4.5_PE",
"E5.5_EPI","E5.5_PE",
"E6.5_EPI","E6.5_PS", "E6.5_VE",
"E7.5_Ectoderm","E7.5_Mesoderm","E7.5_Endoderm"
)
# Define which cells to use
opts$cells <- fread(io$sample_metadata, header=T) %>%
.[,stage_lineage:=paste(stage,lineage,sep="_")] %>%
.[pass_rnaQC==T & outlier==F & stage_lineage%in%opts$stage_lineage,id_rna]
sample_metadata <- fread(io$sample_metadata) %>% .[id_rna %in% opts$cells] %>%
.[,stage_lineage:=paste(stage,lineage,sep="_")]
# Load SCEset object
sce <- readRDS(io$rna.infile)# %>% toSingleCellExperiment()
# Filter cells
sce <- sce[,colnames(sce) %in% opts$cells]
# Remove duplicated ensembl IDs and spike ins
# rowData(sce) <- GRanges(rowData(sce))
# sce <- sce[!duplicated(rowData(sce)$ens_id),]
# sce <- sce[!is.na(rowData(sce)$ens_id),]
# Extract feature metadata to do the overlap
# rna_metadata <- rowData(sce) %>% as.data.frame %>% tibble::rownames_to_column("gene") %>% as.data.table %>%
#   .[,c("chr","start","end","gene","ens_id")]  %>%
#   .[,chr:=as.factor(sub("chr","",chr))] %>%
#   setnames("ens_id","id")
# Create data.table from SCEset object
# rna <- scater::exprs(sce) %>% t %>% as.data.table(keep.rownames="id_rna") %>% melt(id.vars="id_rna", value.name="expr", variable.name="gene")# %>%
#   # merge(rowData(sce) %>% tibble::rownames_to_column("gene") %>% .[,c("gene","ens_id","chr")] %>% as.data.table %>% setnames("ens_id","id"))
rna <- exprs(sce) %>% t %>% as.data.table(keep.rownames="id_rna") %>% melt(id.vars="id_rna", value.name="expr", variable.name="id") %>%
merge(rowData(sce) %>% as.data.frame(row.names=rownames(sce)) %>% tibble::rownames_to_column("ens_id") %>% .[,c("symbol","ens_id")] %>% as.data.table %>% setnames("ens_id","id"))
# rna <- merge(rna, sample_metadata[,c("id_rna","stage_lineage")], by="id_rna")
rna <- merge(rna, sample_metadata[,c("id_rna","stage_lineage","stage")], by="id_rna")
gene_id <- "Mesp1"
p <- ggplot(rna[symbol==gene_id], aes(x=stage_lineage, y=expr)) +
geom_jitter(aes(color=stage), size=1.0) +
# geom_point(aes(color=stage), size=1.0) +
geom_violin(aes(fill=stage), alpha=0.5) +
# geom_boxplot(aes(fill=stage_lineage)) +
# stat_summary(aes(fill=stage_lineage), fun.data=MinMeanSEMMax, geom="boxplot") +
coord_cartesian(ylim=c(0,11)) +
boxplot_theme() +
labs(title=gene_id, x="",y="RNA expression") +
theme(
plot.title = element_text(size=rel(1.5), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.3), angle=90, hjust=1, vjust=0.5)
)
print(p)
# pdf(paste0(io$outdir,"/rna_",gene_id,".pdf"), width=7, height=5, useDingbats = F)
# print(p)
# dev.off()
gene_id <- "Mesp1"
p <- ggplot(rna[symbol==gene_id], aes(x=stage, y=expr)) +
geom_jitter(aes(color=stage), size=1.0) +
# geom_point(aes(color=stage), size=1.0) +
geom_violin(aes(fill=stage), alpha=0.5) +
# geom_boxplot(aes(fill=stage_lineage)) +
# stat_summary(aes(fill=stage_lineage), fun.data=MinMeanSEMMax, geom="boxplot") +
coord_cartesian(ylim=c(0,11)) +
boxplot_theme() +
labs(title=gene_id, x="",y="RNA expression") +
theme(
plot.title = element_text(size=rel(1.5), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.3), angle=90, hjust=1, vjust=0.5)
)
print(p)
# pdf(paste0(io$outdir,"/rna_",gene_id,".pdf"), width=7, height=5, useDingbats = F)
# print(p)
# dev.off()
gene_id <- "Snai1"
p <- ggplot(rna[symbol==gene_id], aes(x=stage, y=expr)) +
geom_jitter(aes(color=stage), size=1.0) +
# geom_point(aes(color=stage), size=1.0) +
geom_violin(aes(fill=stage), alpha=0.5) +
# geom_boxplot(aes(fill=stage_lineage)) +
# stat_summary(aes(fill=stage_lineage), fun.data=MinMeanSEMMax, geom="boxplot") +
coord_cartesian(ylim=c(0,11)) +
boxplot_theme() +
labs(title=gene_id, x="",y="RNA expression") +
theme(
plot.title = element_text(size=rel(1.5), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.3), angle=90, hjust=1, vjust=0.5)
)
print(p)
# pdf(paste0(io$outdir,"/rna_",gene_id,".pdf"), width=7, height=5, useDingbats = F)
# print(p)
# dev.off()
