}
## Define I/O ##
io <- list()
io$expr <- "/Users/ricard/data/gastrulation_all/rna/parsed/sceset_filtered.rds"
io$metadata.file <- "/Users/ricard/data/gastrulation_all/sample_metadata.txt"
io$outdir <- "/Users/ricard/gastrulation_all/rna/dimensionality_reduction/out"
io$stats <- "/Users/ricard/gastrulation_all/metacc/stats/samples/out/sample_stats.txt"
## Define options ##
opts <- list()
# Define stage and lineage
# opts$stage_lineage <- c("E4.5_EPI","E5.5_EPI","E6.5_EPI")
opts$stage_lineage <- "all"
# Define which cells to use
if (opts$stage_lineage[1] == "all") {
opts$cells <- fread(io$metadata.file) %>% .[pass_rnaQC==T & lineage!="TB",sample]
} else {
opts$cells <- fread(io$metadata.file) %>% .[,stage_lineage:=paste(stage,lineage,sep="_")] %>%
.[pass_rnaQC==T & stage_lineage%in%opts$stage_lineage,sample]
}
# Load sample metadata
sample_metadata <- fread(io$metadata.file) %>% .[sample %in% opts$cells] %>%
.[,c("sample","id_met","stage","lineage")] %>%
.[,stage_lineage:=paste(stage,lineage,sep="_")] %>%
merge(fread(io$stats)[context=="CG"] %>% setnames("id","id_met"), by="id_met", all.x=T) %>%
setkey(sample)
# Load SCEset object
sce <- readRDS(io$expr)
sce <- sce[,colnames(sce) %in% opts$cells]
sce$stage_lineage <- paste(sce$stage,sce$lineage,sep="_")
# Convert to data table
# rna <- exprs(sce) %>% t %>% as.data.table(keep.rownames = "sample") %>%
#   melt(id.vars = "sample", value.name = "expr", variable.name = "gene") %>%
#   merge(fData(sce) %>% tibble::rownames_to_column("gene") %>% .[,c("gene","ens_id")] %>% setnames("ens_id","id")) %>%
#   merge(sample_metadata, by="sample")
# Convert to matrtix
# rna_matrix <- rna[,c("sample","gene","expr")] %>% dcast(sample~gene, value.var="expr") %>% matrix.please
# sce$methylation <- sample_metadata[colnames(sce),mean]
plotTSNE(sce[,sce$stage%in%c("E6.5","E6.75","E7.5")], ntop = 750, colour_by="stage", shape_by="lineage", rand_seed=3)
plotTSNE(sce[,sce$stage%in%c("E6.5","E6.75","E7.5")], ntop = 750, colour_by="stage", shape_by="lineage", rand_seed=1)
plotTSNE(sce[,sce$stage%in%c("E4.5","E5.5","E6.5")], ntop = 750, colour_by="stage", shape_by="lineage", rand_seed=3)
plotTSNE(sce[,sce$stage%in%c("E4.5","E5.5","E6.5")], ntop = 750, colour_by="stage", shape_by="lineage", rand_seed=3)
plotTSNE(sce[,sce$stage%in%c("E4.5","E5.5","E6.5")], ntop = 750, colour_by="stage", shape_by="lineage", rand_seed=1)
library(data.table)
library(purrr)
library(ggplot2)
## Define I/O
io <- list()
io$in.metadata <- "/Users/ricard/data/gastrulation_all/sample_metadata.txt"
io$in.acc_data <- "/Users/ricard/data/gastrulation_all/acc/raw"
io$in.met_data <- "/Users/ricard/data/gastrulation_all/met/raw"
io$stats <- "/Users/ricard/gastrulation_all/metacc/stats/samples/out/sample_stats.txt"
## Define options
opts <- list()
# Define which stage and lineages to look at
# opts$stage_lineage <- c("E4.5_EPI","E4.5_PE","E5.5_EPI","E6.5_EPI","E6.5_VE","E6.5_PS","E7.5_Ectoderm","E7.5_Cardiac","E7.5_VE")
# opts$stage_lineage <- c("E4.5_EPI","E5.5_EPI","E6.5_EPI","E6.5_PS","E7.5_Ectoderm","E7.5_Cardiac")
# opts$stage <- c("E4.5","E5.5","E6.5","E7.5")
# Define which cells to use
# opts$met_cells <- fread(io$in.metadata) %>%
#   # .[,stage_lineage:=paste(stage,lineage,sep="_")] %>%
#   .[,stage_lineage:=stage] %>%
#   .[pass_metQC==T & stage_lineage%in%opts$stage_lineage,id_met]
# opts$acc_cells <- fread(io$in.metadata) %>%
#   .[,stage_lineage:=stage] %>%
#   .[pass_accQC==T & stage_lineage%in%opts$stage_lineage,id_acc]
opts$met_cells <- fread(io$in.metadata)[pass_metQC==T,id_met]
opts$acc_cells <- fread(io$in.metadata)[pass_accQC==T,id_acc]
metadata <- fread(io$in.metadata) %>% .[id_met%in%opts$met_cells | id_acc%in%opts$acc_cells] %>%
# .[,stage_lineage:=paste(stage,lineage,sep="_")]
.[,stage_lineage:=stage]
stats <- fread(io$stats)
stats <- rbind(
stats[context=="CG"] %>% merge(metadata[,c("id_met","stage","stage_lineage","seqdepth","plate")] %>% setnames("id_met","id"), by="id"),
stats[context=="GC"] %>% merge(metadata[,c("id_acc","stage","stage_lineage","seqdepth","plate")] %>% setnames("id_acc","id"), by="id")
)
# stats[mean<1,mean:=mean*100]
metadata$stage_lineage
library(data.table)
library(purrr)
library(ggplot2)
## Define I/O
io <- list()
io$in.metadata <- "/Users/ricard/data/gastrulation_all/sample_metadata.txt"
io$in.acc_data <- "/Users/ricard/data/gastrulation_all/acc/raw"
io$in.met_data <- "/Users/ricard/data/gastrulation_all/met/raw"
io$stats <- "/Users/ricard/gastrulation_all/metacc/stats/samples/out/sample_stats.txt"
## Define options
opts <- list()
# Define which stage and lineages to look at
# opts$stage_lineage <- c("E4.5_EPI","E4.5_PE","E5.5_EPI","E6.5_EPI","E6.5_VE","E6.5_PS","E7.5_Ectoderm","E7.5_Cardiac","E7.5_VE")
# opts$stage_lineage <- c("E4.5_EPI","E5.5_EPI","E6.5_EPI","E6.5_PS","E7.5_Ectoderm","E7.5_Cardiac")
# opts$stage <- c("E4.5","E5.5","E6.5","E7.5")
# Define which cells to use
# opts$met_cells <- fread(io$in.metadata) %>%
#   # .[,stage_lineage:=paste(stage,lineage,sep="_")] %>%
#   .[,stage_lineage:=stage] %>%
#   .[pass_metQC==T & stage_lineage%in%opts$stage_lineage,id_met]
# opts$acc_cells <- fread(io$in.metadata) %>%
#   .[,stage_lineage:=stage] %>%
#   .[pass_accQC==T & stage_lineage%in%opts$stage_lineage,id_acc]
opts$met_cells <- fread(io$in.metadata)[pass_metQC==T,id_met]
opts$acc_cells <- fread(io$in.metadata)[pass_accQC==T,id_acc]
metadata <- fread(io$in.metadata) %>% .[id_met%in%opts$met_cells | id_acc%in%opts$acc_cells] %>%
.[,stage_lineage:=paste(stage,lineage,sep="_")]
# .[,stage_lineage:=stage]
stats <- fread(io$stats)
stats <- rbind(
stats[context=="CG"] %>% merge(metadata[,c("id_met","stage","stage_lineage","seqdepth","plate")] %>% setnames("id_met","id"), by="id"),
stats[context=="GC"] %>% merge(metadata[,c("id_acc","stage","stage_lineage","seqdepth","plate")] %>% setnames("id_acc","id"), by="id")
)
# stats[mean<1,mean:=mean*100]
p <- ggplot(stats[context=="GC"], aes(x=stage_lineage, y=mean)) +
# p <- ggplot(stats[context=="GC"], aes(x=interaction(stage_lineage,seqdepth), y=mean)) +
geom_boxplot(alpha=1.0, fill="#00BFC4", outlier.shape = NA) +
geom_jitter(alpha=0.5, color="#00BFC4") +
coord_cartesian(ylim=c(0,0.5)) +
ylab("Genome-wide mean accessibility rate") +
theme(
axis.title.y = element_text(colour="black", size=17, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=15, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black",size=rel(1.5)),
axis.ticks = element_line(colour="black"),
axis.line = element_line(color="black"),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
p
p <- ggplot(stats[context=="CG"], aes(x=stage_lineage, y=mean)) +
# p <- ggplot(stats[context=="CG"], aes(x=interaction(stage_lineage,seqdepth), y=mean)) +
geom_boxplot(alpha=1.0, fill="#F8766D", outlier.shape=NA) +
geom_jitter(alpha=0.75, color="#F8766D") +
coord_cartesian(ylim=c(0,1)) +
ylab("Genome-wide mean rate") +
theme(
axis.title.y = element_text(colour="black", size=17, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=15, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black",size=rel(1.5)),
axis.ticks = element_line(colour="black"),
axis.line = element_line(color="black"),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
p
# pdf("/Users/ricard/NMT-seq/rebuttal/EB/stats/out/metacc_means.pdf")
# print(p)
# dev.off()
stats_filt <- stats[stage%in%c("E4.5","E5.5","E6.5")]
p <- ggplot(stats_filt[context=="GC"], aes(x=interaction(stage_lineage,seqdepth), y=mean)) +
geom_boxplot(alpha=1.0, fill="#00BFC4", outlier.shape = NA) +
geom_jitter(alpha=0.5, color="#00BFC4") +
coord_cartesian(ylim=c(0,0.5)) +
ylab("Genome-wide mean accessibility rate") +
theme(
axis.title.y = element_text(colour="black", size=17, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=15, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black",size=rel(1.5)),
axis.ticks = element_line(colour="black"),
axis.line = element_line(color="black"),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
p
stats_filt <- stats[stage%in%c("E4.5","E5.5","E6.5") & !is.na(lineage)]
stats_filt
stats <- fread(io$stats)
stats <- rbind(
stats[context=="CG"] %>% merge(metadata[,c("id_met","stage","lineage","stage_lineage","seqdepth","plate")] %>% setnames("id_met","id"), by="id"),
stats[context=="GC"] %>% merge(metadata[,c("id_acc","stage","lineage","stage_lineage","seqdepth","plate")] %>% setnames("id_acc","id"), by="id")
)
# stats[mean<1,mean:=mean*100]
stats_filt <- stats[stage%in%c("E4.5","E5.5","E6.5") & !is.na(lineage)]
p <- ggplot(stats_filt[context=="GC"], aes(x=interaction(stage_lineage,seqdepth), y=mean)) +
geom_boxplot(alpha=1.0, fill="#00BFC4", outlier.shape = NA) +
geom_jitter(alpha=0.5, color="#00BFC4") +
coord_cartesian(ylim=c(0,0.5)) +
ylab("Genome-wide mean accessibility rate") +
theme(
axis.title.y = element_text(colour="black", size=17, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=15, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black",size=rel(1.5)),
axis.ticks = element_line(colour="black"),
axis.line = element_line(color="black"),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
p
stats_filt <- stats[stage%in%c("E4.5","E5.5","E6.5") & !is.na(lineage)]
stats_filt <- stats[!is.na(lineage)]
p <- ggplot(stats[context=="GC"], aes(x=stage_lineage, y=mean)) +
# p <- ggplot(stats_filt[context=="GC"], aes(x=interaction(stage_lineage,seqdepth), y=mean)) +
geom_boxplot(alpha=1.0, fill="#00BFC4", outlier.shape = NA) +
geom_jitter(alpha=0.5, color="#00BFC4") +
coord_cartesian(ylim=c(0,0.5)) +
ylab("Genome-wide mean accessibility rate") +
theme(
axis.title.y = element_text(colour="black", size=17, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=15, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black",size=rel(1.5)),
axis.ticks = element_line(colour="black"),
axis.line = element_line(color="black"),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
p
stats_filt <- stats[stage%in%c("E7.5") & !is.na(lineage)]
p <- ggplot(stats[context=="GC"], aes(x=stage_lineage, y=mean)) +
# p <- ggplot(stats_filt[context=="GC"], aes(x=interaction(stage_lineage,seqdepth), y=mean)) +
geom_boxplot(alpha=1.0, fill="#00BFC4", outlier.shape = NA) +
geom_jitter(alpha=0.5, color="#00BFC4") +
coord_cartesian(ylim=c(0,0.5)) +
ylab("Genome-wide mean accessibility rate") +
theme(
axis.title.y = element_text(colour="black", size=17, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=15, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black",size=rel(1.5)),
axis.ticks = element_line(colour="black"),
axis.line = element_line(color="black"),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
p
stats_filt <- stats[stage%in%c("E7.5") & !is.na(lineage)]
p <- ggplot(stats_filt[context=="GC"], aes(x=stage_lineage, y=mean)) +
# p <- ggplot(stats_filt[context=="GC"], aes(x=interaction(stage_lineage,seqdepth), y=mean)) +
geom_boxplot(alpha=1.0, fill="#00BFC4", outlier.shape = NA) +
geom_jitter(alpha=0.5, color="#00BFC4") +
coord_cartesian(ylim=c(0,0.5)) +
ylab("Genome-wide mean accessibility rate") +
theme(
axis.title.y = element_text(colour="black", size=17, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=15, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black",size=rel(1.5)),
axis.ticks = element_line(colour="black"),
axis.line = element_line(color="black"),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
p
stats_filt <- stats[stage%in%c("E6.5","E6.75") & !is.na(lineage)]
p <- ggplot(stats_filt[context=="GC"], aes(x=stage_lineage, y=mean)) +
# p <- ggplot(stats_filt[context=="GC"], aes(x=interaction(stage_lineage,seqdepth), y=mean)) +
geom_boxplot(alpha=1.0, fill="#00BFC4", outlier.shape = NA) +
geom_jitter(alpha=0.5, color="#00BFC4") +
coord_cartesian(ylim=c(0,0.5)) +
ylab("Genome-wide mean accessibility rate") +
theme(
axis.title.y = element_text(colour="black", size=17, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=15, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black",size=rel(1.5)),
axis.ticks = element_line(colour="black"),
axis.line = element_line(color="black"),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
p
stats_filt <- stats[stage%in%c("E6.5","E6.75") & lineage!="TB"]
p <- ggplot(stats_filt[context=="GC"], aes(x=stage_lineage, y=mean)) +
# p <- ggplot(stats_filt[context=="GC"], aes(x=interaction(stage_lineage,seqdepth), y=mean)) +
geom_boxplot(alpha=1.0, fill="#00BFC4", outlier.shape = NA) +
geom_jitter(alpha=0.5, color="#00BFC4") +
coord_cartesian(ylim=c(0,0.5)) +
ylab("Genome-wide mean accessibility rate") +
theme(
axis.title.y = element_text(colour="black", size=17, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=15, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black",size=rel(1.5)),
axis.ticks = element_line(colour="black"),
axis.line = element_line(color="black"),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
p
stats_filt <- stats[stage%in%c("E4.5","E5.5","E6.5") & !is.na(lineage)]
p <- ggplot(stats_filt[context=="CG"], aes(x=stage_lineage, y=mean)) +
# p <- ggplot(stats[context=="CG"], aes(x=interaction(stage_lineage,seqdepth), y=mean)) +
geom_boxplot(alpha=1.0, fill="#F8766D", outlier.shape=NA) +
geom_jitter(alpha=0.75, color="#F8766D") +
coord_cartesian(ylim=c(0,1)) +
ylab("Genome-wide mean rate") +
theme(
axis.title.y = element_text(colour="black", size=17, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=15, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black",size=rel(1.5)),
axis.ticks = element_line(colour="black"),
axis.line = element_line(color="black"),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
stats_filt <- stats[stage%in%c("E4.5","E5.5","E6.5") & lineage!="TB"]
p <- ggplot(stats_filt[context=="CG"], aes(x=stage_lineage, y=mean)) +
# p <- ggplot(stats[context=="CG"], aes(x=interaction(stage_lineage,seqdepth), y=mean)) +
geom_boxplot(alpha=1.0, fill="#F8766D", outlier.shape=NA) +
geom_jitter(alpha=0.75, color="#F8766D") +
coord_cartesian(ylim=c(0,1)) +
ylab("Genome-wide mean rate") +
theme(
axis.title.y = element_text(colour="black", size=17, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=15, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black",size=rel(1.5)),
axis.ticks = element_line(colour="black"),
axis.line = element_line(color="black"),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
p
stats_filt <- stats[stage%in%c("E4.5","E5.5","E6.5") & lineage!="TB"]
p <- ggplot(stats[context=="CG"], aes(x=interaction(stage_lineage,seqdepth), y=mean)) +
geom_boxplot(alpha=1.0, fill="#F8766D", outlier.shape=NA) +
geom_jitter(alpha=0.75, color="#F8766D") +
coord_cartesian(ylim=c(0,1)) +
ylab("Genome-wide mean rate") +
theme(
axis.title.y = element_text(colour="black", size=17, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=15, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black",size=rel(1.5)),
axis.ticks = element_line(colour="black"),
axis.line = element_line(color="black"),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
p
stats_filt <- stats[stage%in%c("E6.5") & lineage!="TB"]
p <- ggplot(stats[context=="CG"], aes(x=interaction(stage_lineage,seqdepth), y=mean)) +
geom_boxplot(alpha=1.0, fill="#F8766D", outlier.shape=NA) +
geom_jitter(alpha=0.75, color="#F8766D") +
coord_cartesian(ylim=c(0,1)) +
ylab("Genome-wide mean rate") +
theme(
axis.title.y = element_text(colour="black", size=17, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=15, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black",size=rel(1.5)),
axis.ticks = element_line(colour="black"),
axis.line = element_line(color="black"),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
p
p <- ggplot(stats_filt[context=="CG"], aes(x=interaction(stage_lineage,seqdepth), y=mean)) +
geom_boxplot(alpha=1.0, fill="#F8766D", outlier.shape=NA) +
geom_jitter(alpha=0.75, color="#F8766D") +
coord_cartesian(ylim=c(0,1)) +
ylab("Genome-wide mean rate") +
theme(
axis.title.y = element_text(colour="black", size=17, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=15, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black",size=rel(1.5)),
axis.ticks = element_line(colour="black"),
axis.line = element_line(color="black"),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
p
stats_filt <- stats[stage%in%c("E7.5") & lineage!="TB"]
p <- ggplot(stats_filt[context=="CG"], aes(x=interaction(stage_lineage,seqdepth), y=mean)) +
geom_boxplot(alpha=1.0, fill="#F8766D", outlier.shape=NA) +
geom_jitter(alpha=0.75, color="#F8766D") +
coord_cartesian(ylim=c(0,1)) +
ylab("Genome-wide mean rate") +
theme(
axis.title.y = element_text(colour="black", size=17, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=15, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black",size=rel(1.5)),
axis.ticks = element_line(colour="black"),
axis.line = element_line(color="black"),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
stats_filt <- stats[stage%in%c("E7.5") & lineage!="TB"]
p <- ggplot(stats_filt[context=="CG"], aes(x=stage_lineage, y=mean)) +
# p <- ggplot(stats_filt[context=="CG"], aes(x=interaction(stage_lineage,seqdepth), y=mean)) +
geom_boxplot(alpha=1.0, fill="#F8766D", outlier.shape=NA) +
geom_jitter(alpha=0.75, color="#F8766D") +
coord_cartesian(ylim=c(0,1)) +
ylab("Genome-wide mean rate") +
theme(
axis.title.y = element_text(colour="black", size=17, margin=margin(0,20,0,0)),
axis.title.x = element_blank(),
axis.text.x = element_text(colour="black", angle=90, size=15, vjust=0.5, hjust=1.0),
axis.text.y = element_text(colour="black",size=rel(1.5)),
axis.ticks = element_line(colour="black"),
axis.line = element_line(color="black"),
legend.position="top",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.key.width=unit(1.2,"line"),
legend.key.height=unit(1.0,"line"),
legend.text = element_text(size=15),
panel.background = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
p
