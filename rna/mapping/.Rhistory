n[i,j] <- sample(1:10,1)
# Sample the number of methylated reads for CpG site i in cell j
m[i,j] <- rbinom(1, n[i,j], rate)
}
}
# Sample observations
# m <- VGAM::rbetabinom(length(n), n, prob = 0.8, rho = 0.1)
n <- matrix(NA, nrow=NCpGs, ncol=Ncells)
m <- matrix(NA, nrow=NCpGs, ncol=Ncells)
for (i in 1:NCpGs) {
# Sample the methylation rate for CpG site i
rate <- rbeta(n=1, shape1=1, shape2=1)
for (j in 1:Ncells) {
# Sample the total number of reads for CpG site i in cell j
n[i,j] <- sample(1:10,1)
# Sample the number of methylated reads for CpG site i in cell j
m[i,j] <- rbinom(1, n[i,j], rate)
}
}
n
m
n == m
fit <- VGAM::vglm(cbind(m[i,], n[i,]-m[i,]) ~ 1, betabinomial, trace = FALSE)
library(VGAM)
require(MASS)
require(data.table)
fit <- VGAM::vglm(cbind(m[i,], n[i,]-m[i,]) ~ 1, betabinomial, trace = FALSE)
fit
Coef(fit)
m[i,]
# Sample observations
# m <- VGAM::rbetabinom(length(n), n, prob = 0.8, rho = 0.1)
r <- rep(NA,NCpGs)
r
# Sample observations
# m <- VGAM::rbetabinom(length(n), n, prob = 0.8, rho = 0.1)
r <- rep(NA,NCpGs)
n <- matrix(NA, nrow=NCpGs, ncol=Ncells)
m <- matrix(NA, nrow=NCpGs, ncol=Ncells)
for (i in 1:NCpGs) {
# Sample the methylation rate for CpG site i
r[i] <- rbeta(n=1, shape1=1, shape2=1)
for (j in 1:Ncells) {
# Sample the total number of reads for CpG site i in cell j
n[i,j] <- sample(1:10,1)
# Sample the number of methylated reads for CpG site i in cell j
m[i,j] <- rbinom(1, n[i,j], r[i])
}
}
fit <- VGAM::vglm(cbind(m[i,], n[i,]-m[i,]) ~ 1, betabinomial, trace = FALSE)
Coef(fit)
rate[i]
r[i]
# Mask observations
# for (i in 1:Ncells) {
# }
for (i in 1:NCpGs) {
fit <- VGAM::vglm(cbind(m[i,], n[i,]-m[i,]) ~ 1, betabinomial, trace = FALSE)
Coef(fit)
}
warnings()
Coef(fit)
rates
rate[i]
r[i]
i
i=50
fit <- VGAM::vglm(cbind(m[i,], n[i,]-m[i,]) ~ 1, betabinomial, trace = FALSE)
Coef(fit)
m[1]
r[1]
r[i]
Coef(fit)
library(VGAM)
require(MASS)
require(data.table)
simulate <- function(NCpGs = 100, Ncells = 100, seed = 1) {
set.seed(seed)
# Sample the total number of reads per cell
# nreads_cells <- runif(Ncells, min = 0, max = 1e6)
# Sample observations
# m <- VGAM::rbetabinom(length(n), n, prob = 0.8, rho = 0.1)
r <- rep(NA,NCpGs)
n <- matrix(NA, nrow=NCpGs, ncol=Ncells)
m <- matrix(NA, nrow=NCpGs, ncol=Ncells)
for (i in 1:NCpGs) {
# Sample the methylation rate for CpG site i
r[i] <- rbeta(n=1, shape1=1, shape2=1)
for (j in 1:Ncells) {
# Sample the total number of reads for CpG site i in cell j
n[i,j] <- sample(1:10,1)
# Sample the number of methylated reads for CpG site i in cell j
m[i,j] <- rbinom(1, n[i,j], r[i])
}
}
return(list(n=n,m=m))
# Mask observations
# for (i in 1:Ncells) {
# }
}
foo <- simulate()
foo
library(VGAM)
require(MASS)
require(data.table)
simulate <- function(NCpGs = 100, Ncells = 100, seed = 1) {
set.seed(seed)
# Sample the total number of reads per cell
# nreads_cells <- runif(Ncells, min = 0, max = 1e6)
# Sample observations
# m <- VGAM::rbetabinom(length(n), n, prob = 0.8, rho = 0.1)
r <- rep(NA,NCpGs)
n <- matrix(NA, nrow=NCpGs, ncol=Ncells)
m <- matrix(NA, nrow=NCpGs, ncol=Ncells)
for (i in 1:NCpGs) {
# Sample the methylation rate for CpG site i
r[i] <- rbeta(n=1, shape1=1, shape2=1)
for (j in 1:Ncells) {
# Sample the total number of reads for CpG site i in cell j
n[i,j] <- sample(1:10,1)
# Sample the number of methylated reads for CpG site i in cell j
m[i,j] <- rbinom(1, n[i,j], r[i])
}
}
return(list(n=n, m=m, r=r))
# Mask observations
# for (i in 1:Ncells) {
# }
}
foo <- simulate()
m <- foo$m
n <- foo$n
r <- foo$r
# Fit Beta-binomial model for every CpG site
fit <- list()
m
dim(m)
# Fit Beta-binomial model for every CpG site
fit <- list()
for (i in 1:length(nrow(m))) {
fit[[i]] <- VGAM::vglm(cbind(m[i,], n[i,]-m[i,]) ~ 1, betabinomial, trace = FALSE)
}
fit
length(fit)
i
# Fit Beta-binomial model for every CpG site
fit <- list()
for (i in 1:nrow(m)) {
fit[[i]] <- VGAM::vglm(cbind(m[i,], n[i,]-m[i,]) ~ 1, betabinomial, trace = FALSE)
}
fit
length(fit)
sapply(1:10, function(i) fit[[i]])
sapply(1:10, function(i) Coef(fit[[i]]))
sapply(1:10, function(i) Coef(fit[[i]])["mu"])
predicted <- sapply(1:10, function(i) Coef(fit[[i]])["mu"])
true <- r[1:10]
ture
true
plot(predicted, ture)
pred <- sapply(1:10, function(i) Coef(fit[[i]])["mu"])
true <- r[1:10]
plot(pred, true)
# Sample observations
r <- rep(NA,NCpGs)
rho <- rep(NA,NCpGs)
n <- matrix(NA, nrow=NCpGs, ncol=Ncells)
m <- matrix(NA, nrow=NCpGs, ncol=Ncells)
for (i in 1:NCpGs) {
# Sample the methylation rate for CpG site i
r[i] <- rbeta(n=1, shape1=1, shape2=1)
# Sample the overdispersion for CpG site i
rho[i] <- rbeta(n=1, shape1=1, shape2=1)
for (j in 1:Ncells) {
# Sample the total number of reads for CpG site i in cell j
n[i,j] <- sample(1:10,1)
# Sample the number of methylated reads for CpG site i in cell j
m[i,j] <- rbinom(1, n[i,j], r[i])
m[i,j] <- VGAM::rbetabinom(1, n[i,j], prob = r[i], rho = rho[i])
}
}
m[i,j]
foo <- simulate()
library(VGAM)
require(MASS)
require(data.table)
simulate <- function(NCpGs = 100, Ncells = 100, seed = 1) {
set.seed(seed)
# Sample the total number of reads per cell
# nreads_cells <- runif(Ncells, min = 0, max = 1e6)
# Sample observations
r <- rep(NA,NCpGs)
rho <- rep(NA,NCpGs)
n <- matrix(NA, nrow=NCpGs, ncol=Ncells)
m <- matrix(NA, nrow=NCpGs, ncol=Ncells)
for (i in 1:NCpGs) {
# Sample the methylation rate for CpG site i
r[i] <- rbeta(n=1, shape1=1, shape2=1)
# Sample the overdispersion for CpG site i
rho[i] <- rbeta(n=1, shape1=1, shape2=1)
for (j in 1:Ncells) {
# Sample the total number of reads for CpG site i in cell j
n[i,j] <- sample(1:10,1)
# Sample the number of methylated reads for CpG site i in cell j
# m[i,j] <- rbinom(1, n[i,j], r[i])
m[i,j] <- VGAM::rbetabinom(1, n[i,j], prob = r[i], rho = rho[i])
}
}
return(list(n=n, m=m, r=r))
# Mask observations
# for (i in 1:Ncells) {
# }
}
foo <- simulate()
m <- foo$m
n <- foo$n
r <- foo$r
# Fit Beta-binomial model for every CpG site
fit <- list()
for (i in 1:nrow(m)) {
fit[[i]] <- VGAM::vglm(cbind(m[i,], n[i,]-m[i,]) ~ 1, betabinomial, trace = FALSE)
}
i
pred <- sapply(1:25, function(i) Coef(fit[[i]])["mu"])
true <- r[1:25]
plot(pred, true)
pred <- sapply(1:25, function(i) Coef(fit[[i]])["rho"])
true <- r[1:25]
plot(pred, true)
true <- rho[1:25]
plot(pred, true)
library(VGAM)
require(MASS)
require(data.table)
simulate <- function(NCpGs = 100, Ncells = 100, seed = 1) {
set.seed(seed)
# Sample the total number of reads per cell
# nreads_cells <- runif(Ncells, min = 0, max = 1e6)
# Sample observations
r <- rep(NA,NCpGs)
rho <- rep(NA,NCpGs)
n <- matrix(NA, nrow=NCpGs, ncol=Ncells)
m <- matrix(NA, nrow=NCpGs, ncol=Ncells)
for (i in 1:NCpGs) {
# Sample the methylation rate for CpG site i
r[i] <- rbeta(n=1, shape1=1, shape2=1)
# Sample the overdispersion for CpG site i
rho[i] <- rbeta(n=1, shape1=1, shape2=1)
for (j in 1:Ncells) {
# Sample the total number of reads for CpG site i in cell j
n[i,j] <- sample(1:10,1)
# Sample the number of methylated reads for CpG site i in cell j
# m[i,j] <- rbinom(1, n[i,j], r[i])
m[i,j] <- VGAM::rbetabinom(1, n[i,j], prob = r[i], rho = rho[i])
}
}
return(list(n=n, m=m, r=r))
# Mask observations
# for (i in 1:Ncells) {
# }
}
foo <- simulate()
m <- foo$m
n <- foo$n
r <- foo$r
# Fit Beta-binomial model for every CpG site
fit <- list()
for (i in 1:nrow(m)) {
fit[[i]] <- VGAM::vglm(cbind(m[i,], n[i,]-m[i,]) ~ 1, betabinomial, trace = FALSE)
}
pred <- sapply(1:25, function(i) Coef(fit[[i]])["mu"])
true <- r[1:25]
plot(pred, true)
pred <- sapply(1:25, function(i) Coef(fit[[i]])["rho"])
true <- rho[1:25]
plot(pred, true)
rbeta(n=1, shape1=1, shape2=1)
simulate <- function(NCpGs = 100, Ncells = 100, seed = 1) {
set.seed(seed)
# Sample the total number of reads per cell
# nreads_cells <- runif(Ncells, min = 0, max = 1e6)
# Sample observations
r <- rep(NA,NCpGs)
rho <- rep(NA,NCpGs)
n <- matrix(NA, nrow=NCpGs, ncol=Ncells)
m <- matrix(NA, nrow=NCpGs, ncol=Ncells)
for (i in 1:NCpGs) {
# Sample the methylation rate for CpG site i
r[i] <- rbeta(n=1, shape1=1, shape2=1)
# Sample the overdispersion for CpG site i
rho[i] <- rbeta(n=1, shape1=1, shape2=10)
for (j in 1:Ncells) {
# Sample the total number of reads for CpG site i in cell j
n[i,j] <- sample(1:10,1)
# Sample the number of methylated reads for CpG site i in cell j
# m[i,j] <- rbinom(1, n[i,j], r[i])
m[i,j] <- VGAM::rbetabinom(1, n[i,j], prob = r[i], rho = rho[i])
}
}
return(list(n=n, m=m, r=r))
# Mask observations
# for (i in 1:Ncells) {
# }
}
foo <- simulate()
m <- foo$m
n <- foo$n
rho <- foo$rho
# Fit Beta-binomial model for every CpG site
fit <- list()
for (i in 1:nrow(m)) {
fit[[i]] <- VGAM::vglm(cbind(m[i,], n[i,]-m[i,]) ~ 1, betabinomial, trace = FALSE)
}
pred <- sapply(1:25, function(i) Coef(fit[[i]])["mu"])
true <- r[1:25]
plot(pred, true)
pred <- sapply(1:25, function(i) Coef(fit[[i]])["rho"])
true <- rho[1:25]
plot(pred, true)
pred <- sapply(1:25, function(i) Coef(fit[[i]])["mu"])
true <- r[1:25]
plot(pred, true)
rbeta(n=1, shape1=1, shape2=10)
rbeta(n=1, shape1=1, shape2=10)
rbeta(n=1, shape1=1, shape2=10)
rbeta(n=1, shape1=1, shape2=10)
rbeta(n=1, shape1=1, shape2=10)
simulate <- function(NCpGs = 100, Ncells = 100, seed = 1) {
set.seed(seed)
# Sample the total number of reads per cell
# nreads_cells <- runif(Ncells, min = 0, max = 1e6)
# Sample observations
r <- rep(NA,NCpGs)
rho <- rep(NA,NCpGs)
n <- matrix(NA, nrow=NCpGs, ncol=Ncells)
m <- matrix(NA, nrow=NCpGs, ncol=Ncells)
for (i in 1:NCpGs) {
# Sample the methylation rate for CpG site i
r[i] <- rbeta(n=1, shape1=1, shape2=1)
# Sample the overdispersion for CpG site i
# rho[i] <- rbeta(n=1, shape1=1, shape2=10)
rho[i] <- 0
for (j in 1:Ncells) {
# Sample the total number of reads for CpG site i in cell j
n[i,j] <- sample(1:10,1)
# Sample the number of methylated reads for CpG site i in cell j
# m[i,j] <- rbinom(1, n[i,j], r[i])
m[i,j] <- VGAM::rbetabinom(1, n[i,j], prob = r[i], rho = rho[i])
}
}
return(list(n=n, m=m, r=r))
# Mask observations
# for (i in 1:Ncells) {
# }
}
foo <- simulate()
m <- foo$m
n <- foo$n
r <- foo$r
rho <- foo$rho
# Fit Beta-binomial model for every CpG site
fit <- list()
for (i in 1:nrow(m)) {
fit[[i]] <- VGAM::vglm(cbind(m[i,], n[i,]-m[i,]) ~ 1, betabinomial, trace = FALSE)
}
pred <- sapply(1:25, function(i) Coef(fit[[i]])["mu"])
foo <- simulate()
m <- foo$m
n <- foo$n
r <- foo$r
rho <- foo$rho
# Fit Beta-binomial model for every CpG site
fit <- list()
for (i in 1:nrow(m)) {
fit[[i]] <- VGAM::vglm(cbind(m[i,], n[i,]-m[i,]) ~ 1, betabinomial, trace = FALSE)
}
i
pred <- sapply(1:15, function(i) Coef(fit[[i]])["mu"])
true <- r[1:15]
plot(pred, true)
pred <- sapply(1:15, function(i) Coef(fit[[i]])["rho"])
true <- rho[1:15]
plot(pred, true)
pred
true
true
rho
foo$rho
simulate <- function(NCpGs = 100, Ncells = 100, seed = 1) {
set.seed(seed)
# Sample the total number of reads per cell
# nreads_cells <- runif(Ncells, min = 0, max = 1e6)
# Sample observations
r <- rep(NA,NCpGs)
rho <- rep(NA,NCpGs)
n <- matrix(NA, nrow=NCpGs, ncol=Ncells)
m <- matrix(NA, nrow=NCpGs, ncol=Ncells)
for (i in 1:NCpGs) {
# Sample the methylation rate for CpG site i
r[i] <- rbeta(n=1, shape1=1, shape2=1)
# Sample the overdispersion for CpG site i
rho[i] <- rbeta(n=1, shape1=1, shape2=5)
# rho[i] <- 0
for (j in 1:Ncells) {
# Sample the total number of reads for CpG site i in cell j
n[i,j] <- sample(1:10,1)
# Sample the number of methylated reads for CpG site i in cell j
# m[i,j] <- rbinom(1, n[i,j], r[i])
m[i,j] <- VGAM::rbetabinom(1, n[i,j], prob = r[i], rho = rho[i])
}
}
return(list(n=n, m=m, r=r, rho=rho))
# Mask observations
# for (i in 1:Ncells) {
# }
}
foo <- simulate()
m <- foo$m
n <- foo$n
r <- foo$r
rho <- foo$rho
# Fit Beta-binomial model for every CpG site
fit <- list()
for (i in 1:nrow(m)) {
fit[[i]] <- VGAM::vglm(cbind(m[i,], n[i,]-m[i,]) ~ 1, betabinomial, trace = FALSE)
}
i
pred <- sapply(1:15, function(i) Coef(fit[[i]])["mu"])
true <- r[1:15]
plot(pred, true)
pred <- sapply(1:15, function(i) Coef(fit[[i]])["rho"])
true <- rho[1:15]
plot(pred, true)
library(data.table)
library(purrr)
library(ggplot2)
library(ggpubr)
## Define I/O ##
io <- list()
io$sample.metadata <- "/Users/ricard/data/Ecker_2017/sample_metadata.txt"
io$data <- "/Users/ricard/data/Ecker_2017/mouse/parsed_CG"
io$outdir <- "/Users/ricard/Ecker_2017/distributions/out"
## Define options ##
opts <- list()
opts$annos <- c(
"prom_2000_2000"="Promoters",
"H3K27ac_cortex"="Brain enhancers"
)
# Define which cells to use
opts$cells <- fread(io$sample.metadata) %>%
tmp <- fread(io$sample.metadata) %>%
.[specie=="Mus_musculus"]
## Define I/O ##
io <- list()
io$sample.metadata <- "/Users/ricard/data/Ecker_2017/sample_metadata.txt"
io$data <- "/Users/ricard/data/Ecker_2017/mouse/parsed_CG"
io$outdir <- "/Users/ricard/Ecker_2017/distributions/out"
## Define options ##
opts <- list()
opts$annos <- c(
"prom_2000_2000"="Promoters",
"H3K27ac_cortex"="Brain enhancers"
)
# Define which cells to use
tmp <- fread(io$sample.metadata) %>%
.[specie=="Mus_musculus"]
if (is.null(opts$stage_lineage10x)) {
opts$cells <- tmp[,short_id]
} else {
opts$cells <- tmp %>%
.[,stage_lineage:=paste(stage,lineage10x_2,sep="_")] %>%
.[pass_metQC==T & stage_lineage%in%opts$stage_lineage,short_id]
}
opts$cells
sample_metadata <- fread(io$sample.metadata,stringsAsFactors=F) %>%
setnames("short_id","id_met") %>%
.[short_id%in%opts$cells]
sample_metadata <- fread(io$sample.metadata) %>%
setnames("short_id","id_met") %>%
.[id_met%in%opts$cells]
data <- lapply(names(opts$annos), function(n)
fread(cmd=sprintf("zcat < %s/%s.tsv.gz",io$data,n), showProgress=F) %>%
setnames(c("id_met","id","anno","Nmet","Ntotal","rate"))
) %>% rbindlist
data <- lapply(names(opts$annos), function(n)
fread(cmd=sprintf("zcat < %s/%s.tsv.gz",io$data,n), showProgress=F) %>%
setnames(c("id_met","id","anno","rate","Ntotal"))
) %>% rbindlist
# Merge methylation data and sample metadata
data <- data %>% merge(sample_metadata, by="id_met")
data[,Nmet:=round(rate*Ntotal)]
head(data)
tail(data)
data[,Nmet:=round((rate/100)*Ntotal)]
tail(data)
data.pseudobulk <- data %>%
# .[,.(rate=100*(sum(Nmet)/sum(Ntotal))),by=c("id_met","stage","id","anno")]
.[,.(rate=100*(sum(Nmet)/sum(Ntotal))),by=c("id","anno")]
p <- gghistogram(data.pseudobulk, x = "rate", y="..density..", fill = "#F37A71", color = "black", alpha=0.75) +
facet_wrap(~stage+anno, nrow=4, scales="fixed") +
theme(
axis.text.y = element_text(size=rel(0.9))
)
# pdf(sprintf("%s/distributions_met.pdf",io$outdir), width=9, height=8)
print(p)
p <- gghistogram(data.pseudobulk, x = "rate", y="..density..", fill = "#F37A71", color = "black", alpha=0.75) +
facet_wrap(~anno, nrow=4, scales="fixed") +
theme(
axis.text.y = element_text(size=rel(0.9))
)
# pdf(sprintf("%s/distributions_met.pdf",io$outdir), width=9, height=8)
print(p)
