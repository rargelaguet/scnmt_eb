)
# pdf(sprintf("%s/%s_boxplots.pdf",io$outdir,i), width=12, height=5)
print(p)
# dev.off()
}
io$acc.stats <- paste0(io$basedir,"/acc/stats/samples/sample_stats.txt")
acc.stats <- fread(io$acc.stats)
acc.stats <- fread(io$acc.stats)
acc.stats <- fread(io$acc.stats) %>%
merge(sample_metadata[,c("sample","id_acc")], by="id_acc")
i
to.plot <- acc_dt.summarised %>% merge(acc.stats)
to.plot
colnames(acc.stats)
colnames(acc_dt.summarised)
to.plot <- acc_dt.summarised %>% merge(acc.stats, by="sample")
to.plot <- acc_dt.summarised %>%
merge(acc.stats, by="sample") %>%
.[,norm_rate:=rate/mean]
to.plot
to.plot
acc.stats <- fread(io$acc.stats) %>%
merge(sample_metadata[,c("sample","id_acc")], by="id_acc")
for (i in names(opts$hits)) {
to.plot <- acc_dt.summarised %>%
merge(acc.stats, by="sample") %>%
.[,norm_rate:=rate/mean]
p <- ggplot(to.plot, aes(x=stage_lineage, y=norm_rate)) +
geom_boxplot(aes(fill=stage_lineage), color="black", outlier.shape = NA, coef=1) +
labs(title="", x="", y="TF motif accessibility") +
facet_wrap(~tf, nrow=1) +
scale_fill_manual(values=opts$colors) +
# coord_cartesian(ylim=c(15,70)) +
theme_bw() +
theme(
axis.text.x = element_text(size=rel(1.0), color="black", angle=50, vjust=1, hjust=1),
# axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size=rel(1.2), color="black"),
axis.title.y = element_text(size=rel(1.4), color="black"),
strip.background = element_rect(fill="#00BFC4"),
strip.text = element_text(size=rel(1.8), color="black"),
legend.position="none",
legend.title = element_blank()
)
# pdf(sprintf("%s/%s_boxplots.pdf",io$outdir,i), width=12, height=5)
print(p)
# dev.off()
}
acc_dt.filt <- acc_dt
acc_dt.summarised <- acc_dt.filt %>%
.[,Nacc:=round(N*(rate/100))] %>%
.[,.(rate=100*sum(Nacc)/sum(N), N=.N),by=c("sample","tf","anno","lineage")] %>%
.[N>=15] %>%
merge(sample_metadata[,c("sample","stage","stage_lineage","plate")], by="sample")
acc_dt.summarised %>%
.[,tf:=stringr::str_replace_all(tf,"::","_")] %>%
.[,stage_lineage:=stringr::str_replace_all(stage_lineage,"_"," ")]  %>%
.[,stage_lineage:=factor(stage_lineage, levels=stringr::str_replace_all(opts$stage_lineage,"_"," "))]
acc.stats <- fread(io$acc.stats) %>%
merge(sample_metadata[,c("sample","id_acc")], by="id_acc")
for (i in names(opts$hits)) {
to.plot <- acc_dt.summarised %>%
merge(acc.stats, by="sample") %>%
.[,norm_rate:=rate/mean]
p <- ggplot(to.plot, aes(x=stage_lineage, y=norm_rate)) +
geom_boxplot(aes(fill=stage_lineage), color="black", outlier.shape = NA, coef=1) +
labs(title="", x="", y="TF motif accessibility") +
facet_wrap(~tf, nrow=1) +
scale_fill_manual(values=opts$colors) +
# coord_cartesian(ylim=c(15,70)) +
theme_bw() +
theme(
axis.text.x = element_text(size=rel(1.0), color="black", angle=50, vjust=1, hjust=1),
# axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size=rel(1.2), color="black"),
axis.title.y = element_text(size=rel(1.4), color="black"),
strip.background = element_rect(fill="#00BFC4"),
strip.text = element_text(size=rel(1.8), color="black"),
legend.position="none",
legend.title = element_blank()
)
# pdf(sprintf("%s/%s_boxplots.pdf",io$outdir,i), width=12, height=5)
print(p)
# dev.off()
}
to.plot <- acc_dt.summarised[lineage==i] %>%
merge(acc.stats, by="sample") %>%
.[,norm_rate:=rate/mean]
View(to.plot)
View(to.plot)
to.plot <- acc_dt.summarised[lineage==i] %>%
merge(acc.stats, by="sample") %>%
.[,norm_rate:=rate/mean]
p <- ggplot(to.plot, aes(x=stage_lineage, y=norm_rate)) +
geom_boxplot(aes(fill=stage_lineage), color="black", outlier.shape = NA, coef=1) +
labs(title="", x="", y="TF motif accessibility") +
facet_wrap(~tf, nrow=1) +
scale_fill_manual(values=opts$colors) +
# coord_cartesian(ylim=c(15,70)) +
theme_bw() +
theme(
axis.text.x = element_text(size=rel(1.0), color="black", angle=50, vjust=1, hjust=1),
# axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size=rel(1.2), color="black"),
axis.title.y = element_text(size=rel(1.4), color="black"),
strip.background = element_rect(fill="#00BFC4"),
strip.text = element_text(size=rel(1.8), color="black"),
legend.position="none",
legend.title = element_blank()
)
# pdf(sprintf("%s/%s_boxplots.pdf",io$outdir,i), width=12, height=5)
print(p)
View(to.plot)
acc_dt.filt <- acc_dt %>% split(.$anno) %>%
map2(.,names(.), function(x,y) x[id%in%diff.acc[sig==T & anno==y,id]]) %>%
rbindlist %>% droplevels()
acc_dt.summarised <- acc_dt.filt %>%
.[,Nacc:=round(N*(rate/100))] %>%
.[,.(rate=100*sum(Nacc)/sum(N), N=.N),by=c("sample","tf","anno","lineage")] %>%
.[N>=15] %>%
merge(sample_metadata[,c("sample","stage","stage_lineage","plate")], by="sample")
acc_dt.summarised %>%
.[,tf:=stringr::str_replace_all(tf,"::","_")] %>%
.[,stage_lineage:=stringr::str_replace_all(stage_lineage,"_"," ")]  %>%
.[,stage_lineage:=factor(stage_lineage, levels=stringr::str_replace_all(opts$stage_lineage,"_"," "))]
acc.stats <- fread(io$acc.stats) %>%
merge(sample_metadata[,c("sample","id_acc")], by="id_acc")
for (i in names(opts$hits)) {
to.plot <- acc_dt.summarised[lineage==i] %>%
merge(acc.stats, by="sample") %>%
.[,norm_rate:=rate/mean]
p <- ggplot(to.plot, aes(x=stage_lineage, y=norm_rate)) +
geom_boxplot(aes(fill=stage_lineage), color="black", outlier.shape = NA, coef=1) +
labs(title="", x="", y="TF motif accessibility") +
facet_wrap(~tf, nrow=1) +
scale_fill_manual(values=opts$colors) +
# coord_cartesian(ylim=c(15,70)) +
theme_bw() +
theme(
axis.text.x = element_text(size=rel(1.0), color="black", angle=50, vjust=1, hjust=1),
# axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size=rel(1.2), color="black"),
axis.title.y = element_text(size=rel(1.4), color="black"),
strip.background = element_rect(fill="#00BFC4"),
strip.text = element_text(size=rel(1.8), color="black"),
legend.position="none",
legend.title = element_blank()
)
# pdf(sprintf("%s/%s_boxplots.pdf",io$outdir,i), width=12, height=5)
print(p)
# dev.off()
}
head(acc_dt)
grep(paste(names(opts$annos),collapse="|")
)
paste(names(opts$annos),collapse="|")
paste(opts$annos,collapse="|")
paste(opts$hits,collapse="|")
a <- fread("/Users/ricard/data/gastrulation/rna/differential/E5.5Epiblast_vs_E5.5Visceral_endoderm.txt.gz")
View(a)
a <- fread("/Users/ricard/data/gastrulation/rna/differential/E4.5Epiblast_vs_E7.5EctodermEndodermMesoderm.txt.gz")
View(a)
saveRDS(acc_dt, "/Users/ricard/data/gastrulation_norsync_stuff/acc/motifs/foo.rds")
library(data.table)
library(purrr)
library(ggplot2)
library(RColorBrewer)
library(weights)
## Define I/O ##
io <- list()
io$basedir <- "/Users/ricard/data/gastrulation"
io$sample.metadata <- "/Users/ricard/data/gastrulation/sample_metadata.txt"
io$motif.dir <- "/Users/ricard/data/gastrulation/acc/parsed/fimo_motifs"
io$diff.acc <- "/Users/ricard/data/gastrulation/acc/differential/feature_level"
# io$trajectory <- "/Users/ricard/data/gastrulation_norsync_stuff/metaccrna/mofa/full/umap_coordinates.txt"
io$trajectory <- "/Users/ricard/data/gastrulation_norsync_stuff/metaccrna/mofa/E7.5/coordinates.txt"
io$outdir <- "/Users/ricard/gastrulation/acc/motifs/ricard/out"
## Define options ##
opts <- list()
opts$annos <- c(
"H3K27ac_distal_E7.5_Mes_intersect12"="Mesoderm enhancers",
"H3K27ac_distal_E7.5_End_intersect12"="Endoderm enhancers",
"H3K27ac_distal_E7.5_Ect_intersect12"="Ectoderm enhancers"
)
opts$colors <- c(
"Epiblast"="grey70",
"Mesoderm"="#CD3278",
"Primitive Streak"="sandybrown",
"Endoderm"="#43CD80",
"Ectoderm"="steelblue",
"E4.5 Epiblast"="#C1CDCD",
"E5.5 Epiblast"="#C1CDCD",
"E6.5 Epiblast"="#C1CDCD",
"E7.5 Epiblast"="#C1CDCD",
"E7.5 Ectoderm"="steelblue",
"E6.5 Primitive Streak"="sandybrown",
"E7.5 Primitive Streak"="sandybrown",
"E7.5 Endoderm"="#43CD80",
"E7.5 Mesoderm"="#CD3278"
)
# Define which stage and lineages to look at
opts$stage_lineage <- c(
"E4.5_Epiblast",
"E5.5_Epiblast",
"E6.5_Epiblast",
"E7.5_Epiblast",
"E7.5_Ectoderm",
# "E6.5_Primitive_Streak",
# "E7.5_Primitive_Streak",
# "E7.5_Endoderm",
"E7.5_Mesoderm"
)
# Minimum number of GpC sites per TF window
opts$min.GpC <- 5
# Define the transcription factor hits per lineage
# opts$hits <- list(
#   "Ectoderm" = c("Pou5f1_Sox2","POU3F1","SP8"), #
#   "Endoderm" = c("Foxa2","Sox17","HNF1B"), # FOXA2
#   "Mesoderm" = c("TWIST1","Gata4","Hand1_Tcf3") # TAL1_TCF3
# )
opts$hits <- list(
# "Ectoderm" = c("POU5F1","SP8","RREB1","TFAP2A","POU3F1","SOX2","Pou5f1_Sox2")
# "Ectoderm" = c("POU5F1","SP8","RREB1","TFAP2A","POU3F1","SOX2","Pou5f1_Sox2")
"Ectoderm" = c("KLF4","Pou2f3")
)
# Define which cells to use
opts$cells <- fread(io$sample.metadata) %>%
.[,stage_lineage:=paste(stage,lineage10x_2,sep="_")] %>%
.[stage_lineage%in%opts$stage_lineage] %>%
.[pass_accQC==T,sample]
sample_metadata <- fread(io$sample.metadata) %>%
.[,stage_lineage:=factor(paste(stage,lineage10x_2,sep="_"),levels=opts$stage_lineage)] %>%
.[sample %in% opts$cells]
foo <- c(
"Ectoderm" = "H3K27ac_distal_E7.5_Ect_intersect12",
"Endoderm" = "H3K27ac_distal_E7.5_End_intersect12",
"Mesoderm" = "H3K27ac_distal_E7.5_Mes_intersect12"
)
acc_dt <- list()
for (i in names(opts$hits)) {
acc_dt[[i]] <- lapply(opts$hits[[i]], function(x) fread(sprintf("%s/%s.tsv.gz",io$motif.dir,x))) %>%
rbindlist %>%
.[sample%in%opts$cells] %>%
.[grep(paste(names(opts$annos),collapse="|"), id_motif),] %>%
.[,anno:=sapply(strsplit(id_motif, "_"), function(x) paste(x[[2]],x[[3]],x[[4]],x[[5]],x[[6]],sep="_"))] %>%
.[,id:=sapply(strsplit(id_motif, "_"), function(x) paste(x[[2]],x[[3]],x[[4]],x[[5]],x[[6]],x[[7]],sep="_"))] %>%
.[anno%in%foo[[i]]] %>%
.[,motif:=toupper(sapply(strsplit(id_motif, "_"),"[[",1))] %>%
.[,lineage:=i]
}
acc_dt <- acc_dt %>% rbindlist %>%
.[N>=opts$min.GpC]
# saveRDS(acc_dt, "/Users/ricard/data/gastrulation_norsync_stuff/acc/motifs/foo.rds")
opts$diff.type <- 2
opts$min.fdr <- 0.10
opts$min.acc.diff <- 5
opts$min.met.diff <- 5
source("/Users/ricard/gastrulation/metaccrna/differential/load_data.R")
diff.acc <- diff.acc %>%
# .[,anno:=stringr::str_replace_all(anno,opts$acc.annos)] %>%
.[,c("id","anno","diff","sig","lineage")]
acc_dt.filt <- acc_dt %>% split(.$anno) %>%
map2(.,names(.), function(x,y) x[id%in%diff.acc[sig==T & anno==y,id]]) %>%
rbindlist %>% droplevels()
acc_dt.filt <- acc_dt
acc_dt.summarised <- acc_dt.filt %>%
.[,Nacc:=round(N*(rate/100))] %>%
.[,.(rate=100*sum(Nacc)/sum(N), N=.N),by=c("sample","tf","anno","lineage")] %>%
.[N>=15] %>%
merge(sample_metadata[,c("sample","stage","stage_lineage","plate")], by="sample")
io$acc.stats <- paste0(io$basedir,"/acc/stats/samples/sample_stats.txt")
# Batch effect between plates
# acc_dt.summarised[,rate:=mean(rate) + lm(formula=rate~plate)[["residuals"]], by=c("anno","tf")] %>% .[,plate:=NULL]
# Global differences in global accessibility rate
# foo <- fread(io$acc.stats) %>% .[,c("id_acc","mean")]
# bar <- acc_dt.summarised %>% merge(foo, by="id_acc") %>%
#   .[,rate:=mean(rate) + lm(formula=rate~mean)[["residuals"]], by=c("tf","anno","lineage")] %>%
#   .[,mean:=NULL]
# acc_dt.summarised <- merge(acc_dt.summarised, trajectory, by="sample")
acc_dt.summarised %>%
.[,tf:=stringr::str_replace_all(tf,"::","_")] %>%
.[,stage_lineage:=stringr::str_replace_all(stage_lineage,"_"," ")]  %>%
.[,stage_lineage:=factor(stage_lineage, levels=stringr::str_replace_all(opts$stage_lineage,"_"," "))]
acc.stats <- fread(io$acc.stats) %>%
merge(sample_metadata[,c("sample","id_acc")], by="id_acc")
for (i in names(opts$hits)) {
to.plot <- acc_dt.summarised[lineage==i] %>%
merge(acc.stats, by="sample") %>%
.[,norm_rate:=rate/mean]
p <- ggplot(to.plot, aes(x=stage_lineage, y=norm_rate)) +
geom_boxplot(aes(fill=stage_lineage), color="black", outlier.shape = NA, coef=1) +
labs(title="", x="", y="TF motif accessibility") +
facet_wrap(~tf, nrow=1) +
scale_fill_manual(values=opts$colors) +
# coord_cartesian(ylim=c(15,70)) +
theme_bw() +
theme(
axis.text.x = element_text(size=rel(1.0), color="black", angle=50, vjust=1, hjust=1),
# axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size=rel(1.2), color="black"),
axis.title.y = element_text(size=rel(1.4), color="black"),
strip.background = element_rect(fill="#00BFC4"),
strip.text = element_text(size=rel(1.8), color="black"),
legend.position="none",
legend.title = element_blank()
)
# pdf(sprintf("%s/%s_boxplots.pdf",io$outdir,i), width=12, height=5)
print(p)
# dev.off()
}
for (i in names(opts$hits)) {
to.plot <- acc_dt.summarised[lineage==i]
p <- ggplot(to.plot, aes(x=stage_lineage, y=rate)) +
geom_boxplot(aes(fill=stage_lineage), color="black", outlier.shape = NA, coef=1) +
labs(title="", x="", y="TF motif accessibility") +
facet_wrap(~tf, nrow=1) +
scale_fill_manual(values=opts$colors) +
coord_cartesian(ylim=c(15,70)) +
theme_bw() +
theme(
axis.text.x = element_text(size=rel(1.0), color="black", angle=50, vjust=1, hjust=1),
# axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size=rel(1.2), color="black"),
axis.title.y = element_text(size=rel(1.4), color="black"),
strip.background = element_rect(fill="#00BFC4"),
strip.text = element_text(size=rel(1.8), color="black"),
legend.position="none",
legend.title = element_blank()
)
# pdf(sprintf("%s/%s_boxplots.pdf",io$outdir,i), width=12, height=5)
print(p)
# dev.off()
}
library(data.table)
library(purrr)
library(ggplot2)
library(RColorBrewer)
library(weights)
## Define I/O ##
io <- list()
io$basedir <- "/Users/ricard/data/gastrulation"
io$sample.metadata <- "/Users/ricard/data/gastrulation/sample_metadata.txt"
io$motif.dir <- "/Users/ricard/data/gastrulation/acc/parsed/fimo_motifs"
io$diff.acc <- "/Users/ricard/data/gastrulation/acc/differential/feature_level"
# io$trajectory <- "/Users/ricard/data/gastrulation_norsync_stuff/metaccrna/mofa/full/umap_coordinates.txt"
io$trajectory <- "/Users/ricard/data/gastrulation_norsync_stuff/metaccrna/mofa/E7.5/coordinates.txt"
io$outdir <- "/Users/ricard/gastrulation/acc/motifs/ricard/out"
## Define options ##
opts <- list()
opts$annos <- c(
"H3K27ac_distal_E7.5_Mes_intersect12"="Mesoderm enhancers",
"H3K27ac_distal_E7.5_End_intersect12"="Endoderm enhancers",
"H3K27ac_distal_E7.5_Ect_intersect12"="Ectoderm enhancers"
)
opts$colors <- c(
"Epiblast"="grey70",
"Mesoderm"="#CD3278",
"Primitive Streak"="sandybrown",
"Endoderm"="#43CD80",
"Ectoderm"="steelblue",
"E4.5 Epiblast"="#C1CDCD",
"E5.5 Epiblast"="#C1CDCD",
"E6.5 Epiblast"="#C1CDCD",
"E7.5 Epiblast"="#C1CDCD",
"E7.5 Ectoderm"="steelblue",
"E6.5 Primitive Streak"="sandybrown",
"E7.5 Primitive Streak"="sandybrown",
"E7.5 Endoderm"="#43CD80",
"E7.5 Mesoderm"="#CD3278"
)
# Define which stage and lineages to look at
opts$stage_lineage <- c(
"E4.5_Epiblast",
"E5.5_Epiblast",
"E6.5_Epiblast",
"E7.5_Epiblast",
"E7.5_Ectoderm",
# "E6.5_Primitive_Streak",
# "E7.5_Primitive_Streak",
# "E7.5_Endoderm",
"E7.5_Mesoderm"
)
# Minimum number of GpC sites per TF window
opts$min.GpC <- 5
# Define the transcription factor hits per lineage
# opts$hits <- list(
#   "Ectoderm" = c("Pou5f1_Sox2","POU3F1","SP8"), #
#   "Endoderm" = c("Foxa2","Sox17","HNF1B"), # FOXA2
#   "Mesoderm" = c("TWIST1","Gata4","Hand1_Tcf3") # TAL1_TCF3
# )
opts$hits <- list(
# "Ectoderm" = c("POU5F1","SP8","RREB1","TFAP2A","POU3F1","SOX2","Pou5f1_Sox2")
# "Ectoderm" = c("POU5F1","SP8","RREB1","TFAP2A","POU3F1","SOX2","Pou5f1_Sox2")
# "Ectoderm" = c("KLF4","Pou2f3")
"Ectoderm" = c("ESRRB","MYC")
)
# Define which cells to use
opts$cells <- fread(io$sample.metadata) %>%
.[,stage_lineage:=paste(stage,lineage10x_2,sep="_")] %>%
.[stage_lineage%in%opts$stage_lineage] %>%
.[pass_accQC==T,sample]
sample_metadata <- fread(io$sample.metadata) %>%
.[,stage_lineage:=factor(paste(stage,lineage10x_2,sep="_"),levels=opts$stage_lineage)] %>%
.[sample %in% opts$cells]
foo <- c(
"Ectoderm" = "H3K27ac_distal_E7.5_Ect_intersect12",
"Endoderm" = "H3K27ac_distal_E7.5_End_intersect12",
"Mesoderm" = "H3K27ac_distal_E7.5_Mes_intersect12"
)
acc_dt <- list()
for (i in names(opts$hits)) {
acc_dt[[i]] <- lapply(opts$hits[[i]], function(x) fread(sprintf("%s/%s.tsv.gz",io$motif.dir,x))) %>%
rbindlist %>%
.[sample%in%opts$cells] %>%
.[grep(paste(names(opts$annos),collapse="|"), id_motif),] %>%
.[,anno:=sapply(strsplit(id_motif, "_"), function(x) paste(x[[2]],x[[3]],x[[4]],x[[5]],x[[6]],sep="_"))] %>%
.[,id:=sapply(strsplit(id_motif, "_"), function(x) paste(x[[2]],x[[3]],x[[4]],x[[5]],x[[6]],x[[7]],sep="_"))] %>%
.[anno%in%foo[[i]]] %>%
.[,motif:=toupper(sapply(strsplit(id_motif, "_"),"[[",1))] %>%
.[,lineage:=i]
}
acc_dt <- acc_dt %>% rbindlist %>%
.[N>=opts$min.GpC]
# saveRDS(acc_dt, "/Users/ricard/data/gastrulation_norsync_stuff/acc/motifs/foo.rds")
opts$diff.type <- 2
opts$min.fdr <- 0.10
opts$min.acc.diff <- 5
opts$min.met.diff <- 5
source("/Users/ricard/gastrulation/metaccrna/differential/load_data.R")
diff.acc <- diff.acc %>%
# .[,anno:=stringr::str_replace_all(anno,opts$acc.annos)] %>%
.[,c("id","anno","diff","sig","lineage")]
acc_dt.filt <- acc_dt %>% split(.$anno) %>%
map2(.,names(.), function(x,y) x[id%in%diff.acc[sig==T & anno==y,id]]) %>%
rbindlist %>% droplevels()
acc_dt.filt <- acc_dt
acc_dt.summarised <- acc_dt.filt %>%
.[,Nacc:=round(N*(rate/100))] %>%
.[,.(rate=100*sum(Nacc)/sum(N), N=.N),by=c("sample","tf","anno","lineage")] %>%
.[N>=15] %>%
merge(sample_metadata[,c("sample","stage","stage_lineage","plate")], by="sample")
io$acc.stats <- paste0(io$basedir,"/acc/stats/samples/sample_stats.txt")
# Batch effect between plates
# acc_dt.summarised[,rate:=mean(rate) + lm(formula=rate~plate)[["residuals"]], by=c("anno","tf")] %>% .[,plate:=NULL]
# Global differences in global accessibility rate
# foo <- fread(io$acc.stats) %>% .[,c("id_acc","mean")]
# bar <- acc_dt.summarised %>% merge(foo, by="id_acc") %>%
#   .[,rate:=mean(rate) + lm(formula=rate~mean)[["residuals"]], by=c("tf","anno","lineage")] %>%
#   .[,mean:=NULL]
# acc_dt.summarised <- merge(acc_dt.summarised, trajectory, by="sample")
acc_dt.summarised %>%
.[,tf:=stringr::str_replace_all(tf,"::","_")] %>%
.[,stage_lineage:=stringr::str_replace_all(stage_lineage,"_"," ")]  %>%
.[,stage_lineage:=factor(stage_lineage, levels=stringr::str_replace_all(opts$stage_lineage,"_"," "))]
acc.stats <- fread(io$acc.stats) %>%
merge(sample_metadata[,c("sample","id_acc")], by="id_acc")
for (i in names(opts$hits)) {
to.plot <- acc_dt.summarised[lineage==i] %>%
merge(acc.stats, by="sample") %>%
.[,norm_rate:=rate/mean]
p <- ggplot(to.plot, aes(x=stage_lineage, y=norm_rate)) +
geom_boxplot(aes(fill=stage_lineage), color="black", outlier.shape = NA, coef=1) +
labs(title="", x="", y="TF motif accessibility") +
facet_wrap(~tf, nrow=1) +
scale_fill_manual(values=opts$colors) +
# coord_cartesian(ylim=c(15,70)) +
theme_bw() +
theme(
axis.text.x = element_text(size=rel(1.0), color="black", angle=50, vjust=1, hjust=1),
# axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size=rel(1.2), color="black"),
axis.title.y = element_text(size=rel(1.4), color="black"),
strip.background = element_rect(fill="#00BFC4"),
strip.text = element_text(size=rel(1.8), color="black"),
legend.position="none",
legend.title = element_blank()
)
# pdf(sprintf("%s/%s_boxplots.pdf",io$outdir,i), width=12, height=5)
print(p)
# dev.off()
}
for (i in names(opts$hits)) {
to.plot <- acc_dt.summarised[lineage==i]
p <- ggplot(to.plot, aes(x=stage_lineage, y=rate)) +
geom_boxplot(aes(fill=stage_lineage), color="black", outlier.shape = NA, coef=1) +
labs(title="", x="", y="TF motif accessibility") +
facet_wrap(~tf, nrow=1) +
scale_fill_manual(values=opts$colors) +
coord_cartesian(ylim=c(15,70)) +
theme_bw() +
theme(
axis.text.x = element_text(size=rel(1.0), color="black", angle=50, vjust=1, hjust=1),
# axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size=rel(1.2), color="black"),
axis.title.y = element_text(size=rel(1.4), color="black"),
strip.background = element_rect(fill="#00BFC4"),
strip.text = element_text(size=rel(1.8), color="black"),
legend.position="none",
legend.title = element_blank()
)
# pdf(sprintf("%s/%s_boxplots.pdf",io$outdir,i), width=12, height=5)
print(p)
# dev.off()
}
